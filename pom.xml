<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>info.freelibrary</groupId>
	<artifactId>freelib-djatoka</artifactId>
	<version>1.1.1-SNAPSHOT</version>
	<name>FreeLibrary Djatoka</name>
	<packaging>war</packaging>
	<description>A repackaging of aDORe-Djatoka to work with Maven/Jetty</description>
	<inceptionYear>20110701</inceptionYear>
	<dependencies>
		<!-- below only for internal image reports -->
		<dependency>
			<groupId>org.im4java</groupId>
			<artifactId>im4java</artifactId>
			<version>1.2.0</version>
		</dependency>
		<!-- above only for internal image reports -->
		<!-- below for openurl -->
		<dependency>
			<groupId>xalan</groupId>
			<artifactId>xalan</artifactId>
			<version>2.5.D1</version>
		</dependency>
		<!-- above for openurl -->
		<dependency>
			<groupId>info.freelibrary</groupId>
			<artifactId>freelib-utils</artifactId>
			<version>0.2.5-SNAPSHOT</version>
		</dependency>
		<dependency>
			<groupId>commons-cli</groupId>
			<artifactId>commons-cli</artifactId>
			<version>1.1</version>
		</dependency>
		<dependency>
			<groupId>com.martiansoftware</groupId>
			<artifactId>jsap</artifactId>
			<version>2.1</version>
		</dependency>
		<dependency>
			<groupId>commons-dbcp</groupId>
			<artifactId>commons-dbcp</artifactId>
			<version>1.2.2</version>
		</dependency>
		<dependency>
			<groupId>commons-pool</groupId>
			<artifactId>commons-pool</artifactId>
			<version>1.4</version>
		</dependency>
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.8</version>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.5</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<version>2.5</version>
		</dependency>
		<dependency>
			<groupId>kdu</groupId>
			<artifactId>kdu_jni</artifactId>
			<version>0.0.0</version>
			<scope>system</scope>
			<systemPath>${project.basedir}/lib/kdu_jni.jar</systemPath>
		</dependency>
		<dependency>
			<groupId>imagej</groupId>
			<artifactId>ij-ImageIO</artifactId>
			<version>0.0.0</version>
			<scope>system</scope>
			<systemPath>${project.basedir}/lib/ij-ImageIO.jar</systemPath>
		</dependency>
		<dependency>
			<groupId>imagej</groupId>
			<artifactId>ij</artifactId>
			<version>0.0.0</version>
			<scope>system</scope>
			<systemPath>${project.basedir}/lib/ij.jar</systemPath>
		</dependency>
		<dependency>
			<groupId>xom</groupId>
			<artifactId>xom</artifactId>
			<version>1.2.5</version>
		</dependency>
	</dependencies>
	<build>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>
		<plugins>
			<plugin>
				<groupId>info.freelibrary</groupId>
				<artifactId>llp2jlp-maven-plugin</artifactId>
				<version>0.0.3-SNAPSHOT</version>
				<executions>
					<execution>
						<id>native-copy</id>
						<phase>compile</phase>
						<goals>
							<goal>copy</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.3.1</version>
				<configuration>
					<source>1.6</source>
					<target>1.6</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.mortbay.jetty</groupId>
				<artifactId>jetty-maven-plugin</artifactId>
				<version>8.1.2.v20120308</version>
				<configuration>
					<connectors>
						<connector implementation="org.eclipse.jetty.server.nio.SelectChannelConnector">
							<port>8888</port>
							<maxIdleTime>60000</maxIdleTime>
						</connector>
					</connectors>
					<stopKey>cough</stopKey>
					<stopPort>8999</stopPort>
					<scanIntervalSeconds>1</scanIntervalSeconds>
					<requestLog implementation="org.eclipse.jetty.server.NCSARequestLog">
						<filename>target/yyyy_mm_dd.request.log</filename>
						<retainDays>30</retainDays>
						<append>true</append>
						<extended>false</extended>
						<logTimeZone>GMT</logTimeZone>
					</requestLog>
					<systemProperties>
						<systemProperty>
							<name>org.mortbay.jetty.Request.maxFormContentSize</name>
							<value>2000000</value>
						</systemProperty>
						<systemProperty>
							<name>logback.configurationFile</name>
							<value>src/main/resources/logback.xml</value>
						</systemProperty>
						<systemProperty>
							<name>DJATOKA_HOME</name>
							<value>${project.basedir}</value>
						</systemProperty>
						<systemProperty>
							<name>LD_LIBRARY_PATH</name>
							<value>${LD_LIBRARY_PATH}</value>
						</systemProperty>
						<systemProperty>
							<name>DYLD_LIBRARY_PATH</name>
							<value>${project.basedir}/${DYLD_LIBRARY_PATH}</value>
						</systemProperty>
						<systemProperty>
							<name>kakadu.home</name>
							<value>${project.basedir}/target/lib</value>
						</systemProperty>
					</systemProperties>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>kdu</groupId>
						<artifactId>kdu_jni</artifactId>
						<version>0.0.0</version>
						<scope>system</scope>
						<systemPath>${project.basedir}/lib/kdu_jni.jar</systemPath>
					</dependency>
					<dependency>
						<groupId>imagej</groupId>
						<artifactId>ij-ImageIO</artifactId>
						<version>0.0.0</version>
						<scope>system</scope>
						<systemPath>${project.basedir}/lib/ij-ImageIO.jar</systemPath>
					</dependency>
					<dependency>
						<groupId>imagej</groupId>
						<artifactId>ij</artifactId>
						<version>0.0.0</version>
						<scope>system</scope>
						<systemPath>${project.basedir}/lib/ij.jar</systemPath>
					</dependency>
				</dependencies>
			</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											info.freelibrary
										</groupId>
										<artifactId>
											llp2jlp-maven-plugin
										</artifactId>
										<versionRange>
											[0.0.2,)
										</versionRange>
										<goals>
											<goal>copy</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
	<!-- Default settings, here, can be overridden in profiles below -->
	<!-- Below's can be overridden in ${MAVEN_HOME}/conf/settings.xml -->
	<properties>
		<djatoka.ingest.exts>tiff,tif</djatoka.ingest.exts>
		<djatoka.ingest.data>${project.basedir}/src/test/resources/images</djatoka.ingest.data>
		<djatoka.jp2.data>${project.basedir}/target/images</djatoka.jp2.data>
		<!-- The cache the OpenURL system uses when it creates an object -->
		<openurl.cache.dir>${project.basedir}/target/tmpcache</openurl.cache.dir>
		<!-- Separate cache used for the pairtree storage system -->
		<djatoka.view.cache>${project.basedir}/target/cache</djatoka.view.cache>
		<!-- Max TIFF file size for ingest (always specified in MB) -->
		<djatoka.ingest.maxSize>200</djatoka.ingest.maxSize>
		<!-- <referent.resolver>gov.lanl.adore.djatoka.openurl.SimpleListResolver</referent.resolver> -->
		<referent.resolver>info.freelibrary.djatoka.view.IdentifierResolver</referent.resolver>
		<cache.enabled>true</cache.enabled>
		<!-- Supported: "", "sLUM", "sRGB", "sYCC", "iccLUM" or "iccRGB" -->
		<djatoka.ingest.color.space>sRGB</djatoka.ingest.color.space>
	</properties>
	<profiles>
		<profile>
			<!-- Unverified -->
			<id>linux-32</id>
			<activation>
				<os>
					<name>Linux</name>
					<arch>i386</arch>
				</os>
			</activation>
			<properties>
				<LD_LIBRARY_PATH>${project.basedir}/lib/Linux-x86-32</LD_LIBRARY_PATH>
			</properties>
		</profile>
		<profile>
			<!-- Verified -->
			<id>linux-64</id>
			<activation>
				<os>
					<name>Linux</name>
					<arch>amd64</arch>
				</os>
			</activation>
			<properties>
				<LD_LIBRARY_PATH>${project.basedir}/lib/Linux-x86-64</LD_LIBRARY_PATH>
				<!-- example of overridding a default property -->
				<!-- <djatoka.data>/usr/local/data/images</djatoka.data> -->
			</properties>
		</profile>
		<profile>
			<!-- Unverified -->
			<id>mac-x86</id>
			<activation>
				<os>
					<name>Mac OS X</name>
					<!--<arch>i386</arch>-->
				</os>
			</activation>
			<properties>
				<DYLD_LIBRARY_PATH>lib/Mac-x86</DYLD_LIBRARY_PATH>
			</properties>
		</profile>
		<profile>
			<!-- Unverified -->
			<id>windows</id>
			<activation>
				<os>
					<family>windows</family>
					<arch>x86</arch>
				</os>
			</activation>
			<properties>
				<LD_LIBRARY_PATH>${project.basedir}/lib/Win32</LD_LIBRARY_PATH>
			</properties>
		</profile>
		<profile>
			<!-- Unverified -->
			<id>solaris-x86</id>
			<activation>
				<os>
					<name>SunOS</name>
					<arch>x86</arch>
				</os>
			</activation>
			<properties>
				<LD_LIBRARY_PATH>${project.basedir}/lib/Solaris-x86</LD_LIBRARY_PATH>
			</properties>
		</profile>
		<profile>
			<!-- Unverified -->
			<id>solaris-sparc</id>
			<activation>
				<os>
					<name>SunOS</name>
					<arch>sparc</arch>
				</os>
			</activation>
			<properties>
				<LD_LIBRARY_PATH>${project.basedir}/lib/Solaris-Sparc</LD_LIBRARY_PATH>
			</properties>
		</profile>
		<profile>
			<!-- Unverified -->
			<id>solaris-sparcv9</id>
			<activation>
				<os>
					<name>Solaris</name>
					<arch>sparc</arch>
				</os>
			</activation>
			<properties>
				<LD_LIBRARY_PATH>${project.basedir}/lib/Solaris-Sparcv9</LD_LIBRARY_PATH>
			</properties>
		</profile>
	</profiles>
	<repositories>
		<repository>
			<id>freelib-snapshots</id>
			<name>FreeLibrary Snapshot Repository</name>
			<url>https://oss.sonatype.org/content/repositories/snapshots</url>
		</repository>
	</repositories>
	<pluginRepositories>
		<pluginRepository>
			<id>freelib-snapshots</id>
			<name>FreeLibrary Snapshot Repository</name>
			<url>https://oss.sonatype.org/content/repositories/snapshots</url>
		</pluginRepository>
	</pluginRepositories>
</project>

<!--
	MAVEN_OPTS="-Djava.library.path=target/lib" mvn jetty:run-exploded
-->

<!--
	From: mvn dependency:analyze
	[WARNING] Used undeclared dependencies found:
	[WARNING]    org.slf4j:slf4j-api:jar:1.6.0:compile
	[WARNING] Unused declared dependencies found:
	[WARNING]    jai:mlibwrapper_jai:jar:0.0.0:system
-->
