freelib-djatoka (version 1.1.0)      https://github.com/ksclarke/freelib-djatoka


================================================================================
INTRODUCTION
================================================================================

This package, freelib-djatoka, is a fork of the adore-djatoka JP2 image server.
It was created in an attempt to provide an easy way to run djatoka from a
Maven/Jetty setup.  Once you've checked the package out using git (and have
Maven2 installed - http://maven.apache/org), installing and running the program
should be as simple as typing:

  MAVEN_OPTS="-Djava.library.path=target/lib" mvn jetty:run-exploded

To confirm it's working, go to http://localhost:8888 and click the Update Image
button (an image should then appear at the top of the page).  Right now, only
the Linux amd64 configuration has been verified as working.  If you would like
to confirm that the program works on another platform this would be appreciated
(contact the email address below if you do, thanks!)


================================================================================
Configuration
================================================================================

freelib-djatoka will ingest TIFF files in a specified TIFF directory.  It will
also store JP2s and derivative JPEG files to the file system.  To configure all
this, the project's pom.xml needs to be updated to match your local system.  In
the 'properties' element change the following three properties to suit your file
system:

	<djatoka.ingest.data>/usr/local/data/images/tiffs</djatoka.ingest.data>
	<djatoka.jp2.data>/usr/local/data/images/jp2s</djatoka.jp2.data>
	<openurl.cache.dir>/usr/local/data/images/cache</openurl.cache.dir>
	
These properties can be overwritten in the 'profiles' section if you are using
something other than a Linux system.  If you are using Linux, you can also use
the supplied locations and symlink them to another drive, etc.

To start the ingest of TIFF files, go to --> http://localhost:8888/ingest

This will start a background process that ingests the files in the djatoka
ingest data directory.

To check on the status of the ingest, revisit --> http://localhost:8888/ingest


================================================================================
Optional Apache Configuration
================================================================================

The freelib-djatoka image server is designed to run from Jetty at a domain like
http://images.domain.edu/ (or http://images.domain.edu:8888/). If you want to
run freelib-djatoka behind Apache at a URL like http://www.domain.edu/djatoka,
you will need a little extra Apache configuration.  The below is a snippet that
can be put into your virtual host configuration to enable this.

    ProxyRequests Off

    <Proxy *>
        Order deny,allow
        Allow from all
    </Proxy>

    # Below assumes you aren't serving another /css, /javascript, etc.

    ProxyPass /djatoka http://localhost:8888
    ProxyPassReverse /djatoka http://localhost:8888
    ProxyPass /css http://localhost:8888/css
    ProxyPassReverse /css http://localhost:8888/css
    ProxyPass /javascript http://localhost:8888/javascript
    ProxyPassReverse /javascript http://localhost:8888/javascript
    ProxyPass /images http://localhost:8888/images
    ProxyPassReverse /images http://localhost:8888/images
    ProxyPass /view.xsl http://localhost:8888/view.xsl
    ProxyPassReverse /view.xsl http://localhost:8888/view.xsl
    ProxyPass /view http://localhost:8888/view
    ProxyPassReverse /view http://localhost:8888/view
    ProxyPass /resolve http://localhost:8888/resolve
    ProxyPassReverse /resolve http://localhost:8888/resolve

    # OR you could just use (which assumes you aren't serving other things)
    
    ProxyPass /djatoka http://localhost:8888
    ProxyPassReverse /djatoka http://localhost:8888
    ProxyPass / http://localhost:8888/
    ProxyPassReverse / http://localhost:8888/

    # You only need one ProxyPass/ProxyPassReverse section (above), not both

================================================================================
LICENSE
================================================================================

This package, freelib-djatoka, like adore-djatoka, is available under the LGPL
license (version 2.1 or later).

It contains Kakadu binaries which are provided under a NON-COMMERCIAL USE ONLY
license.  See the adore-djatoka page for more details (see URL below).


================================================================================
QUESTIONS AND COMMENTS
================================================================================

Questions should be directed to Kevin S. Clarke at ksclarke@gmail.com

The original djatoka project is available at http://djatoka.sourceforge.net/
